from __future__ import annotations
from typing import Protocol, runtime_checkable, Callable, Dict, Any
import numpy as np

Frame = np.ndarray  # HxWxC uint8/uint16

@runtime_checkable
class Camera(Protocol):
    name: str
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def set_exposure(self, us: int) -> None: ...
    def set_gain(self, gain: float) -> None: ...
    def subscribe(self, cb: Callable[[Frame], None]) -> None: ...
    def unsubscribe(self, cb: Callable[[Frame], None]) -> None: ...

@runtime_checkable
class TelescopeMount(Protocol):
    def connect(self) -> None: ...
    def disconnect(self) -> None: ...
    def slew_to(self, ra: float, dec: float) -> None: ...
    def stop(self) -> None: ...
    def get_status(self) -> Dict[str, object]: ...

@runtime_checkable
class GPS(Protocol):
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def subscribe(self, cb: Callable[[dict], None]) -> None: ...
    def unsubscribe(self, cb: Callable[[dict], None]) -> None: ...

@runtime_checkable
class Heater(Protocol):
    def set_power(self, pct: float) -> None: ...
    def get_power(self) -> float: ...
